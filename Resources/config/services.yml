parameters:
    instaphp.class:	      Instaphp\Instaphp
    instaphp.token_class: Oh\InstagramBundle\TokenHandler\CookieToken
    instaphp.redirect_route_login: homepage
    instaphp.redirect_route_logout: homepage
    
    instaphp.config:
      version: v1
      endpoint: https://api.instagram.com
      endpoint_timeout: 10
      client_id: %instagram_api_client_id%
      client_secret: %instagram_api_client_secret%
      scope: comments+likes+relationships
      oauth_path: /oauth/authorize/?client_id={client_id}&amp;response_type=code&amp;redirect_uri={redirect_uri}
      oauth_token_path: /oauth/access_token/
      redirect_route: OhInstagramBundle_callback
      no_verify_peer: true

services:
    instaphp_token_handler:
        class:            %instaphp.token_class%
    instaphp:
        class:            %instaphp.class%
        arguments:        [@instaphp_token_handler, %instaphp.config%, @router]
        
        
#### to get/set the instagram token from your user entity
#parameters:
#    instaphp.token_class: Oh\InstagramBundle\TokenHandler\UserToken
#    
#services:
#    instaphp_token_handler:
#        class:            %instaphp.token_class%
#        arguments:        [@security.context, @doctrine.orm.default_entity_manager]


#### or you can use both (if the user's not logged in then it uses cookie)
#parameters:
#    instaphp.token_class: Oh\InstagramBundle\TokenHandler\TokenManager
#
#    instaphp.user_token_class: Oh\InstagramBundle\TokenHandler\UserToken
#    instaphp.cookie_token_class: Oh\InstagramBundle\TokenHandler\CookieToken
#    
#services:
#    instaphp_user_token_handler:
#        class:            %instaphp.user_token_class%
#        arguments:        [@security.context, @doctrine.orm.default_entity_manager]
#    instaphp_cookie_token_handler:
#        class:            %instaphp.cookie_token_class%
#
#    instaphp_token_handler:
#        class:            %instaphp.token_class%
#        arguments:        [@instaphp_user_token_handler, @instaphp_cookie_token_handler]